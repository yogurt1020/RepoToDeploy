{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/project/ProjectItem.js","components/project/CreateProjectButton.js","components/Dashboard.js","components/layout/Header.js","components/project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/index.js","store.js","components/project/UpdateProject.js","components/projectBoard/projectTasks/ProjectTask.js","actions/backlogActions.js","components/projectBoard/Backlog.js","components/projectBoard/ProjectBoard.js","components/projectBoard/projectTasks/AddProjectTask.js","components/projectBoard/projectTasks/UpdateProjectTask.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","type","payload","push","response","data","ProjectItem","onDeleteClick","identifier","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","class","aria-hidden","Dashboard","getProjects","projects","map","key","id","protoTypes","PropTypes","object","isRequired","func","state","get","res","Header","href","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","e","setState","target","name","value","onSubmit","preventDefault","newProject","console","log","classnames","placeholder","initialState","project_tasks","project_task","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","UpdateProject","nextProps","match","params","getProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6706af5b.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/project\");\r\n\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getProject = (identifier, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${identifier}`);\r\n\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = (identifier) => async (dispatch) => {\r\n  if (!window.confirm(\"삭제하시겠습니까?\")) {\r\n    return;\r\n  }\r\n\r\n  await axios.delete(`/api/project/${identifier}`);\r\n\r\n  dispatch({\r\n    type: DELETE_PROJECT,\r\n    payload: identifier,\r\n  });\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = (identifier) => {\r\n    this.props.deleteProject(identifier);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> 프로젝트 정보 수정 </i>\r\n                  </li>\r\n                </Link>\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> 프로젝트 삭제 </i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> 프로젝트 생성\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./project/ProjectItem\";\r\nimport CreateProjectButton from \"./project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map((project) => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.protoTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"Dashboard.html\">\r\n            프로젝트 일정 관리 App\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/dashboard\">\r\n                  Dashboard\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link \" href=\"register.html\">\r\n                  가입\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"login.html\">\r\n                  로그인\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  state = {\r\n    projectName: \"\",\r\n    projectIdentifier: \"\",\r\n    description: \"\",\r\n    start_date: \"\",\r\n    end_date: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   if (nextProps.errors) {\r\n  //     this.setState({ errors: nextProps.errors });\r\n  //   }\r\n  // }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n\r\n    this.props.createProject(newProject, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    // const { errors } = this.state;\r\n    const { errors } = this.props;\r\n    console.log(errors);\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">프로젝트 생성</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"프로젝트 명\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectIdentifier,\r\n                    })}\r\n                    placeholder=\"프로젝트 고유 ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"프로젝트 내용\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>시작 일자</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>예상 종료 일자</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          (project) => project.projectIdentifier !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (project_task) => project_task.projectSequence !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\")) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  state = {\r\n    id: \"\",\r\n    projectName: \"\",\r\n    projectIdentifier: \"\",\r\n    description: \"\",\r\n    start_date: \"\",\r\n    end_date: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { identifier } = this.props.match.params;\r\n    this.props.getProject(identifier, this.props.history);\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n\r\n    this.props.createProject(newProject, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">프로젝트 수정</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"프로젝트 명\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                    name=\"projectName\"\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectIdentifier,\r\n                    })}\r\n                    placeholder=\"프로젝트 고유 ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"프로젝트 내용\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>시작 일자</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>예상 종료 일자</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"./types\";\r\n\r\n//Fix bug with priority in Spring Boot Server, needs to check null first\r\nexport const addProjectTask = (backlog_id, project_task, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async (dispatch) => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./projectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map((project_task) => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              // insert tasks here\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask,\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At,\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSequence}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport AddProject from \"./components/project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/project/UpdateProject\";\nimport ProjectBoard from \"./components/projectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/projectBoard/projectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/projectBoard/projectTasks/UpdateProjectTask\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/addProject\" component={AddProject} />\n            <Route exact path=\"/updateProject/:id\" component={UpdateProject} />\n            <Route exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n            <Route\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <Route\n              exact\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\n              component={UpdateProjectTask}\n            />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}